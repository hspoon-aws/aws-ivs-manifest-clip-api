AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Amazon IVS Clip Manisfest
Globals:
  Function:
    Runtime: nodejs12.x
    Timeout: 40
    MemorySize: 128
    Environment:
      Variables:
        STORAGE_IVSRECORDINGS_BUCKETNAME:
          Ref: IVSRecordingBucket
        CLOUDFRONT_DOMAIN_NAME:
          Fn::Sub: https://${CloudfrontDistribution.DomainName}
        ACCOUNT_ID:
          Ref: AWS::AccountId
Resources:
  ClipManifestLambda:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.handler
      CodeUri: s3://hspoon-aws-ivs-manifest-clip-main-sam/f436cf591e6010c0b47d417e2924efff
      Policies:
      - S3CrudPolicy:
          BucketName:
            Ref: IVSRecordingBucket
      Events:
        Api1:
          Type: Api
          Properties:
            Path: /clipmanifest
            Method: POST
    Metadata:
      SamResourceId: ClipManifestLambda
  GetRecordingsLambda:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.handler
      CodeUri: s3://hspoon-aws-ivs-manifest-clip-main-sam/eeded7d516fa507695e36e09aa7f0724
      Policies:
      - S3ReadPolicy:
          BucketName:
            Ref: IVSRecordingBucket
      Events:
        Api1:
          Type: Api
          Properties:
            Path: /getrecordings
            Method: GET
    Metadata:
      SamResourceId: GetRecordingsLambda
  GetClipsLambda:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.handler
      CodeUri: s3://hspoon-aws-ivs-manifest-clip-main-sam/648fcfa87198a472b8d6bca34d4bb708
      Policies:
      - S3ReadPolicy:
          BucketName:
            Ref: IVSRecordingBucket
      Events:
        Api1:
          Type: Api
          Properties:
            Path: /getclips
            Method: GET
    Metadata:
      SamResourceId: GetClipsLambda
  CloudFrontOriginAccessIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: Serverless website OA
    Metadata:
      SamResourceId: CloudFrontOriginAccessIdentity
  CloudfrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Comment: Cloudfront distribution for IVS Manifest Clip
        DefaultRootObject: index.html
        Enabled: true
        HttpVersion: http2
        Origins:
        - Id: s3-website
          DomainName:
            Fn::GetAtt:
            - IVSRecordingBucket
            - DomainName
          S3OriginConfig:
            OriginAccessIdentity:
              Fn::Sub: origin-access-identity/cloudfront/${CloudFrontOriginAccessIdentity}
        DefaultCacheBehavior:
          Compress: 'true'
          AllowedMethods:
          - HEAD
          - GET
          - OPTIONS
          ForwardedValues:
            QueryString: false
            Headers:
            - Origin
            - Access-Control-Request-Method
            - Access-Control-Request-Headers
          TargetOriginId: s3-website
          ViewerProtocolPolicy: redirect-to-https
    Metadata:
      SamResourceId: CloudfrontDistribution
  IVSRecordingBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName:
        Fn::Sub: my-new-ivs-recording-bucket-${AWS::AccountId}
      CorsConfiguration:
        CorsRules:
        - AllowedMethods:
          - GET
          AllowedOrigins:
          - '*'
          AllowedHeaders:
          - Authorization
          - Content-Length
          MaxAge: 3000
    Metadata:
      SamResourceId: IVSRecordingBucket
  IVSRecordingBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: IVSRecordingBucket
      PolicyDocument:
        Statement:
        - Effect: Allow
          Action: s3:GetObject
          Resource:
          - Fn::Sub: arn:aws:s3:::${IVSRecordingBucket}/*
          Principal:
            AWS:
              Fn::Sub: arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity
                ${CloudFrontOriginAccessIdentity}
    Metadata:
      SamResourceId: IVSRecordingBucketPolicy
Outputs:
  ApiURLGetRecordings:
    Description: API endpoint get recordings available
    Value:
      Fn::Sub: https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/getrecordings/
  ApiURLGetClips:
    Description: API endpoint get clips available
    Value:
      Fn::Sub: https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/getclips/
  ApiURLCreateClip:
    Description: API endpoint post create clips
    Value:
      Fn::Sub: https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/clipmanifest/
  CloudfrontDistribution:
    Description: Amazon CloudFront Domain Name
    Value:
      Fn::Sub: https://${CloudfrontDistribution.DomainName}
